--- камменты мои, шоб не забыть. BFG

function r_shape(packet)
	local s
	local st = {}
	st.count = packet:r_u8()
	st.shapes = {}
	for i=1, st.count do
		s = {}
		s.type = packet:r_u8()
		if s.type == 0 then
			s.center = packet:r_vec3()
			s.radius = packet:r_float()
		else
			s.axis_x = packet:r_vec3()
			s.axis_y = packet:r_vec3()
			s.axis_z = packet:r_vec3()
			s.offset = packet:r_vec3()
		end
		st.shapes[i] = s
	end
	return st
end

function w_shape(packet, st)
	local s
	packet:w_u8(st.count)
	for i=1, st.count do
		s = st.shapes[i]
		packet:w_u8(s.type)
		if s.type == 0 then
			packet:w_vec3(s.center)
			packet:w_float(s.radius)
		else
			packet:w_vec3(s.axis_x)
			packet:w_vec3(s.axis_y)
			packet:w_vec3(s.axis_z)
			packet:w_vec3(s.offset)
		end
	end
end

function rewrite_restrictor(sobj, custom, radius)
	local packet = net_packet()
	sobj:STATE_Write(packet)
	local game_vertex_id	= packet:r_u16()
	local distance		= packet:r_float()
	local direct_control	= packet:r_s32()
	local level_vertex_id	= packet:r_s32()
	local object_flags		= packet:r_s32()
	local custom_data		= packet:r_stringZ()
	local story_id		= packet:r_s32()
	local spawn_story_id	= packet:r_s32()
	local shape		= r_shape(packet)
	local restrictor_type	= packet:r_u8()

	custom_data = custom
	shape = {}
	shape.count = 1
	shape.shapes = {}
	shape.shapes[1] = {}
	shape.shapes[1].type = 0
	shape.shapes[1].center = vector():set(0,0,0)
	shape.shapes[1].radius = radius

	packet:w_u16(game_vertex_id)
	packet:w_float(distance)
	packet:w_s32(direct_control)
	packet:w_s32(level_vertex_id)
	packet:w_s32(object_flags)
	packet:w_stringZ(custom_data)
	packet:w_s32(story_id)
	packet:w_s32(spawn_story_id)
	w_shape(packet, shape)
	packet:w_u8(restrictor_type)
	sobj:STATE_Read(packet, packet:w_tell() - packet:r_tell())
end


-- создаЄм дубль-рестр между 1 и 2 отсеком √оспитал€, там щас проделан проход ибо аи-сетка есть
-- логика та же, что и у рестра в норе наверху

function hos_actor_restr1()
	local sobj = alife():create("space_restrictor",vector():set(-84.946,24.965,679.688),4193,3046)
	if sobj then
		local custom = "[logic]\ncfg = scripts\\new\\nebo\\hos_actor_restr1.ltx"
		rewrite_restrictor(sobj,custom,2)
	end
end

function stenka_restr()
	local sobj = alife():create("space_restrictor",vector():set(156.97,-4.2158,-101.128),356877,919)
	if sobj then
		local custom = "[logic]\ncfg = scripts\\zzz.ltx"
		rewrite_restrictor(sobj,custom,8)
	end
end

function del_obj_by_name( obj_name )
	return amk.release(obj_name)
end

function del_obj_by_sid( story_id, news_str )
	local se_obj = alife():story_object(story_id)
	if se_obj then
		if news_str then
		sol_utils.send_tip( news_str, nil, nil, 25000)
	end
	end
	return amk.release(story_id)
end



