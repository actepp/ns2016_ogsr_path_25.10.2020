--[[
Developed by AMK-Team
File: amkII_launcher. script
Copyright: © AMK-Team 2009
Author: Refresh

Since: 10.01.2009 20:17
	-- Написан класс для запуска функций через апдейт актора. Полезно в тех слечаях когда актер еще не доступен.
Since: 18.01.2009 23:09
	-- Добавлена возможность ставить таймер на вызов функций.
Since: 22.01.2009 0:15
	-- Время таймера сохраняется в storage актору.
	-- Для экономии места создал табличку aFunctions. ["Удобное нам название функции"] = {"Короткое название для storage",  "Строка вызова функции"}
Since: 15.02.2009 1:05	
	-- Убрал дебаг инфу и откорректировал немножко код.
]]--

local aFunctions = {}

--* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
-- *			                    CAmkLauncher 		                           	       *
--* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

class "CAmkLauncher"
function CAmkLauncher:__init()
	self.aLauncher = {}
	self.iTblSize  = 0
	self.iPeriod   = 0
end

--[[
--	SaveData(oActor)
--	Сохранение игры. Сохранение переменных.
--	@param	object	oActor	Обьект актера.
--]]	
function CAmkLauncher:SaveData(oActor)
	local iSizeData = 0
	for sName, aFunc in pairs(self.aLauncher) do
		if aFunctions[sName] then
			local iVal = aFunc.oTime:diffSec(game.get_game_time())	
			xr_logic.pstor_store(oActor, aFunctions[sName][1], iVal)
		end
	end
end

--[[
--	LoadData(oActor)
--	Загрузка игры. Загрузка сохраненных переменных.
--	@param	object	oActor	Обьект актера.
--]]	
function CAmkLauncher:LoadData(oActor)
	for sName, aFunc in pairs(aFunctions) do
		local iVal = xr_logic.pstor_retrieve(oActor, aFunc[1], nil)
		if iVal == nil then return end
	
		self.aLauncher[sName] = {}	
		self.aLauncher[sName].sValue = aFunc[2]
	
		local oIdle = game.CTime()
		oIdle:setHMSms( 0, 0, iVal, 0)		
		self.aLauncher[sName].oTime = game.get_game_time() + oIdle
		
		self.iTblSize = self.iTblSize + 1
	end
end

--[[
--	UpdateFuncs()
--	Апдейт на вызов функций.
--]]	
function CAmkLauncher:UpdateFuncs()
	if self.iTblSize < 1 or self.iPeriod > time_global() then return end	
	self.iPeriod = time_global() + 2000
	
	for sName, aFnc in pairs(self.aLauncher) do
		if aFnc.oTime:diffSec(game.get_game_time()) < 1 then			
			self:DelFunc(sName)
			local oFunction = loadstring(aFnc.sValue)
			oFunction() --exemple		
		end
	end	
end

--[[
--	AddFunc(sName, sValue, iSeconds)
--	Добавление функции в лаунчер.
--	@param	string	sName	Метка функции, произвольное название. 	
--	@param	string	sValue	Строка запуска функции.
--	@param	integer	iSeconds	Время для таймера, в игровых секундах.	
--]]	
function CAmkLauncher:AddFunc(sName, sValue, iSeconds)
	if iSeconds == nil then
		iSeconds = 0
	end
	
	self.aLauncher[sName] = {}
	self.aLauncher[sName].sValue = sValue
	
	local oIdle = game.CTime()
	oIdle:setHMSms( 0, 0, iSeconds, 0)
	self.aLauncher[sName].oTime = game.get_game_time() + oIdle
	
	self.iTblSize = self.iTblSize + 1	
end

--[[
--	DelFunc(sName)
--	Удаление функции из лаунчера.
--	@param	string	sName	Метка функции, произвольное название. 			
--]]	
function CAmkLauncher:DelFunc(sName)
	if self.aLauncher[sName] then		
		self.aLauncher[sName] = nil
		self.iTblSize = self.iTblSize - 1
	end
end

--[[
--	HaveFunc(sName)
--	Проверка на присутствие функции в лаунчере.
--	@param	string	sName	Метка функции, произвольное название. 	
--	@return	boolen			
--]]	
function CAmkLauncher:HaveFunc(sName)
	if self.aLauncher[sName] ~= nil then
		return true	
	end
	return false
end





