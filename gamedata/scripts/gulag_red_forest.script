local t = {}
local table_insert = table.insert

-- Проверка, что гулаг на активной локации:
function gulag_level(gulag)
	local actor = db.actor
	local gg = game_graph()
	local gv = actor and actor:game_vertex_id()
	local lid = gv and gg:vertex(gv):level_id()
	--get_console():execute( string.format("load ~[инфо_лог]:[gulag_esc]: gulag:%s gulag.lvlid: %s <> lid: %s",gulag.name,gulag.lvlid,tostring(lid)))
	return gulag.lvlid == lid
end

-- Загрузка работ:
function load_job(sj,gname,type,squad,groups)

-------'''' Гулаги с постоянным состоянием ''''-------

	-- Медведи
	if type == "for_medwed" then
		--' 5 работ
		for t = 1, 3 do
			t = {section = "logic@for_medwed_home1", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 2 do
			t = {section = "logic@for_medwed_home2", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
	if type == "for_medwed_small" then
		--' 2 работы
		for t = 1, 2 do
			t = {section = "logic@for_medwed_small_home", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
	-- Тушканы
	if type == "for_tushkano1" then
		--' 10 работ
		for t = 1, 4 do
			t = {section = "logic@for_tushkano1_home1", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 3 do
			t = {section = "logic@for_tushkano1_home2", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 3 do
			t = {section = "logic@for_tushkano1_home3", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
     -- Крысоволки
	if type == "for_ratlike" then
		--' 7 работ
		for t = 1, 7 do
			t = {section = "logic@for_ratlike_home", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
	-- Кабаны и свиньи
	if type == "for_flesh_boar" then
		--' 9 работ
		for t = 1, 5 do
			t = {section = "logic@for_flesh_boar_home1", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 4 do
			t = {section = "logic@for_flesh_boar_home2", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
	-- Кабаны и поросята
	if type == "for_boar_small" then
		--' 7 работ
		for t = 1, 7 do
			t = {section = "logic@for_boar_small_home", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
	-- Слепыши и псевдособаки
	if type == "for_dog_pseudodog" then
		--' 7 работ
		for t = 1, 7 do
			t = {section = "logic@for_dog_pseudodog_home", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
	-- Кровососы
	if type == "for_bloodsucker1" then
		--' 2 работы
    		t = { section = "logic@for_bloodsucker1_home1", idle = 0, prior = 7, state = {0},  
		  in_rest = "", out_rest = ""
		} 
		table.insert(sj, t)
		t = { section = "logic@for_bloodsucker1_home2", idle = 0, prior = 7, state = {0},  
		  in_rest = "", out_rest = ""
		} 
		table.insert(sj, t)	
	end
	-- Крысы
	if type == "for_rat" then
		--' 10 работ
		for t = 1, 5 do
			t = {section = "logic@for_rat_home1", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 5 do
			t = {section = "logic@for_rat_home2", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
	-- Бюреры
	if type == "for_burer" then
		--' 2 работы
    		for t = 1, 2 do
			t = {section = "logic@for_burer_home", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end	
	end
	-- Гулаг Шадоумана, постоянный
	if type == "for_freed_nebo2" then
		--' 12 работ + 1 экс
		t = {section = "logic@for_freed_nebo2_walker10", idle = 0, prior = 12, state = {0},
			in_rest = "", out_rest = "",
			predicate = function(obj_info)
							return obj_info.name == "shadowman"
						end
		}
		table.insert(sj, t)
		for i = 1, 9 do
			t = {section = "logic@for_freed_nebo2_walker"..i, idle = 0, prior = 10, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 3 do
			t = {section = "logic@for_freed_nebo2_kamp", idle = 0, prior = 4, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
	-- Наёмники
	if type == "for_killer_most" then
    		--' 15 работ
	    	for i = 1, 15 do
			t = {section = "logic@for_killer_most_walker"..i, idle = 0, prior = 7, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
    	-- Сталкеры
	if type == "for_stalker" then
		for i = 1, 3 do
			t = {section = "logic@for_stalker_walker"..i, idle = 0, prior = 6, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for i = 1, 3 do
			t = {section = "logic@for_stalker_kamp1", idle = 0, prior = 2, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for i = 1, 3 do
			t = {section = "logic@for_stalker_kamp2", idle = 0, prior = 2, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
			     
---'''' Гулаги с переменным состоянием ''''---

	-- Денис
	if type == "forest_wound_smart" then
		--' 1 работа
		t = { section = "logic@forest_wound_of", idle = 0, prior = 25, state = {0},
		  online = false,
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@forest_wound", idle = 0, prior = 25, state = {1},
		  online = true,
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@forest_wound_sleep", idle = 0, prior = 25, state = {2},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)
	end
	-- Охотники
	if type == "green_forest" then
		--' 6 работ
		t = { section = "logic@green_day_speak_night", idle = 0, prior = 25, state = {0, 1},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@green_day_patr_night", idle = 0, prior = 15, state = {0, 1},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@green_day1", idle = 0, prior = 10, state = {0},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@green_day2", idle = 0, prior = 10, state = {0},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@green_day3", idle = 0, prior = 10, state = {0},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@green_day4", idle = 0, prior = 10, state = {0},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@green_night1", idle = 0, prior = 10, state = {1},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@green_night2", idle = 0, prior = 10, state = {1},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@green_night3", idle = 0, prior = 10, state = {1},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
		t = { section = "logic@green_night4", idle = 0, prior = 10, state = {1},
		  in_rest = "", out_rest = "",
		  position_threshold = 400
		} 
		table.insert(sj, t)	
	end
	-- Гулаг Шадоумана, временный
	if type == "for_freed_nebo" then
		--' 6 работ + 1 экс, ждём в гулаге
		t = {section = "logic@for_freed_nebo_walker7", idle = 0, prior = 12, state = {0},
			in_rest = "", out_rest = "",
			predicate = function(obj_info)
							return obj_info.name == "shadowman"
						end
		}
		table.insert(sj, t)
		for i = 1, 6 do
			t = {section = "logic@for_freed_nebo_walker"..i, idle = 0, prior = 10, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		--' 1 состояние - 7 работ, идём на мост
		for i = 8, 14 do
			t = {section = "logic@for_freed_nebo_walker"..i, idle = 0, prior = 7, state = {1},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end
	
end

function load_states(gname,type)

	if type == "forest_wound_smart" then
		return function(gulag)
			local actor = db.actor
			if not has_alife_info("contr_forest_deads") then
				return 0 -- оффлайн
			elseif has_alife_info("denis_wound_next") then 
				return 2 -- отдыхаем
			else
				return 1 -- работаем
			end
		end
	end
	if type == "for_medwed" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_medwed_small" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_tushkano1" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_ratlike" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_flesh_boar" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_boar_small" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_dog_pseudodog" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_bloodsucker1" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_rat" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_burer" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "green_forest" then
		return function(gulag)
			if db.actor ~= nil then
				if ( level.get_time_hours() >= 5 and level.get_time_hours() <= 22 ) then
					return 0  -- день
				else
					return 1  -- ночь
				end
			else
				return gulag.state
			end
		end
	end
	if type == "for_killer_most" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_freed_nebo" then
		return function(gulag)
			local actor = db.actor
			if not actor then
				return gulag.state
			end
			if has_alife_info("shadowman_forest_start") then
				return 1 -- идём на мост
			end
			return 0 -- сидим в гулаге
		end
	end
	if type == "for_freed_nebo2" then
        	return function(gulag)
            	return 0
        	end
    	end
	if type == "for_stalker" then
        	return function(gulag)
            	return 0
        	end
    	end
			     
  end

function load_ltx(gname,type)
	return nil
end

function checkStalker(npc_community,gulag_type,npc_rank,sobj)

	if gulag_type == "forest_wound_smart" then
		return sobj:profile_name() == "forest_wound"
	end
	if gulag_type == "green_forest" then
        	return npc_community == "green"
    	end
	if gulag_type == "for_killer_most" then
        	return npc_community == "killer"
    	end
	if gulag_type == "for_freed_nebo" then
        	return npc_community == "nebo" or npc_community == "freedom"
    	end
	if gulag_type == "for_freed_nebo2" then
		return npc_community == "nebo" or npc_community == "freedom"
	end
	if gulag_type == "for_stalker" then
        	return npc_community == "stalker"
    	end
			
	return false
end

function checkMonster(npc_community,gulag_type)

	if gulag_type == "for_medwed" then
		return npc_community == "medwed"
	end
	if gulag_type == "for_medwed_small" then
		return npc_community == "medwed"
	end
	if gulag_type == "for_tushkano1" then
		return npc_community == "tushkano"
	end
	if gulag_type == "for_ratlike" then
		return npc_community == "ratlike"
	end
	if gulag_type == "for_flesh_boar" then
		return npc_community == "boar" or npc_community == "flesh"
	end
	if gulag_type == "for_dog_pseudodog" then
		return npc_community == "dog" or npc_community == "pseudodog"
	end
	if gulag_type == "for_boar_small" then
		return npc_community == "boar"
	end
	if gulag_type == "for_bloodsucker1" then
		return npc_community == "bloodsucker"
	end
	if gulag_type == "for_rat" then
		return npc_community == "rat"
	end
	if gulag_type == "for_burer" then
		return npc_community == "burer"
	end

     	return false
end
