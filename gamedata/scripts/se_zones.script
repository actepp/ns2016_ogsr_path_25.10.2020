---' revision and adaptation for NS_2013 lsclon 16.01.13 '---
--' Zones. Аномалии и рестрикторы.
--' Перепаковка нет-пакета от bardak's

function repack_zone( packet, size )
	local offset_x, offset_y, offset_z, radius = 0, 0, 0, 0
	local packet1 = net_packet()
	-- свойства cse_alife_object
	packet1:w_u16( packet:r_u16() )         -- game_vertex_id             -- 0
	packet1:w_float( packet:r_float() )     -- cse_alife_object__unk1_f32 -- 2
	packet1:w_u32( packet:r_u32() )         -- cse_alife_object__unk2_u32 -- 6
	packet1:w_u32( packet:r_u32() )         -- cse_alife_object__unk2_u32 -- 10
	packet1:w_s32( packet:r_s32() )         -- object_flags               -- 14
	packet1:w_stringZ( packet:r_stringZ() ) -- custom_data                -- 18
	local sid = packet:r_s32()              -- 19
	packet1:w_s32( sid )                    -- story_id
	packet1:w_s32( packet:r_s32() )         -- se_alife_object__unk3_u32  -- 23
	-- свойства cse_shape
	local shape_count = packet:r_u8()       -- 27
	packet1:w_u8( shape_count )
	for i = 1, shape_count do
		local shape_type = packet:r_u8()    --28
		packet1:w_u8( shape_type )
		if shape_type == 0 then
			-- sphere
			local o_x = packet:r_float()
			local o_y = packet:r_float()
			local o_z = packet:r_float()
			if o_x and o_y and o_z then
				offset_x = o_x
				offset_y = o_y
				offset_z = o_z
			end
			packet1:w_vec3( vector():set( offset_x, offset_y, offset_z ) )  -- offset -- 29
			radius = packet:r_float()                                       -- radius -- 41
			packet1:w_float( radius )
		else
			-- box
			local v1 = packet:r_vec3()
			local v2 = packet:r_vec3()
			local v3 = packet:r_vec3()
			local v4 = packet:r_vec3()
			packet1:w_vec3( v1 )
			packet1:w_vec3( v2 )
			packet1:w_vec3( v3 )
			packet1:w_vec3( v4 )
			radius = math.sqrt( v1:magnitude() * v1:magnitude() + v3:magnitude() * v3:magnitude() ) / 2
		end
	end
	-- свойства cse_alife_space_restrictor
	packet:r_u8()
	packet1:w_u8( 0 )                       -- restrictor_type -- 45 or 89
	for i = 1, size-packet1:r_tell() do
		packet1:w_u8(packet:r_u8())
	end
--[[
-- свойства cse_alife_custom_zone
packet1:w_float(packet:r_float()) -- cse_alife_custom_zone__unk1_f32 -- 46 or 90
packet1:w_s32(packet:r_s32())     -- cse_alife_custom_zone__unk2_u32 -- 50 or 94
packet1:w_s32(packet:r_s32())     -- on_off_mode_enabled_time        -- 54 or 98
packet1:w_s32(packet:r_s32())     -- on_off_mode_disabled_time       -- 58 or 102
packet1:w_s32(packet:r_s32())     -- on_off_mode_shift_time          -- 62 or 106
-- свойства cse_alife_anomalous_zone
packet1:w_float(packet:r_float()) -- offline_interactive_radius         -- 66 or 110
packet1:w_s16(packet:r_s16())     -- artefact_spawn_places_count        -- 70 or 114
packet1:w_s32(packet:r_s32())     -- cse_alife_anomalous_zone__unk1_u32 -- 72 or 116
-- свойства se_zone_anom
local last_spawn_time_present = packet:r_u8()     -- 76 or 120
packet1:w_u8(last_spawn_time_present)
if last_spawn_time_present == 1 then
	utils.w_CTime(packet1,utils.r_CTime(packet)) -- 77
end
--]]
	packet1:r_seek( 0 )
	return packet1, radius
end


---' Аномалии --------------------------------
class "se_zone_anom" (cse_anomalous_zone)
---' -----------------------------------------
--' Конструктор:
function se_zone_anom:__init ( section ) super ( section )
end

--' Сохранение
function se_zone_anom:STATE_Write( packet )
	cse_anomalous_zone.STATE_Write( self, packet )
end

--' Восстановление
function se_zone_anom:STATE_Read( packet, size )
	local packet1, radius = repack_zone( packet, size )
	self.radius = radius
	cse_anomalous_zone.STATE_Read( self, packet1, size )
end

--' Регистрация объекта
function se_zone_anom:on_register()
	cse_anomalous_zone.on_register( self )
end


---' Амеба, тополинный пух и т.д -------------
class "se_zone_visual" ( cse_zone_visual )
---' -----------------------------------------
--' Конструктор:
function se_zone_visual:__init ( section ) super ( section )
end

--' Регистрация объекта
function se_zone_visual:on_register()
	cse_zone_visual.on_register( self )
end


---' Рестрикторы ---------------------------------
class "se_restrictor" ( cse_alife_space_restrictor )
---' ---------------------------------------------
--' Конструктор:
function se_restrictor:__init ( section ) super ( section )
	self.init_flag = false
end

--' Регистрация объекта
function se_restrictor:on_register()
	cse_alife_space_restrictor.on_register( self )
	if not self.init_flag then
		self.init_flag = true
		local ini = self:spawn_ini()
		if ini and ini:section_exist( "spawner" ) then
			local tabl = xr_logic.parse_condlist( ini:r_string( "spawner", "auto_dell" ), db.actor, "spawner", "auto_dell" )
			local auto_dell = xr_logic.pick_section_from_condlist( db.actor, self,tabl ) ~= nil
			if auto_dell then
				alife():release( self, true )
			end
		end
	end
end

function se_restrictor:keep_saved_data_anyway()
	return true
end