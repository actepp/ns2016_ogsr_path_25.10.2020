--[[---------------------------------------------------------------------------------------
	File              : collect_sections.script
	Description       : Поиск секций игровых объектов в кофигах
	Created           : 11.05.2014
	Last update       : 03.12.2015
	Copyright         : naxac / naxac.spaces.ru /
--]]---------------------------------------------------------------------------------------
local log = function(fmt, ...)
	fmt = string.format(fmt, ...)
	if log1 then log1(fmt)			-- X-Ray Extensions
	elseif log123 then log123(fmt)	-- Lua Extensions
	elseif ver_prefix=='la' then _G.log(fmt)	-- Lost Alpha
	elseif ver_prefix=='soc' or alife() then	-- crutches
		fmt = string.gsub(fmt, "%s", "_")
		get_console():execute(fmt)
	end
end

local included = {"system.ltx"}
local sections = {}
local classes = {
	weapons = {
		[clsid.wpn_ak74]                = true,
		[clsid.wpn_ak74_s]              = true,
		[clsid.wpn_binocular]           = true,
		[clsid.wpn_binocular_s]         = true,
		[clsid.wpn_bm16]                = true,
		[clsid.wpn_bm16_s]              = true,
		[clsid.wpn_fn2000]              = true,
		[clsid.wpn_fort]                = true,
		[clsid.wpn_groza]               = true,
		[clsid.wpn_groza_s]             = true,
		[clsid.wpn_hpsa]                = true,
		[clsid.wpn_hpsa_s]              = true,
		[clsid.wpn_knife]               = true,
		[clsid.wpn_knife_s]             = true,
		[clsid.wpn_lr300]               = true,
		[clsid.wpn_lr300_s]             = true,
		[clsid.wpn_pm]                  = true,
		[clsid.wpn_pm_s]                = true,
		[clsid.wpn_rg6]                 = true,
		[clsid.wpn_rg6_s]               = true,
		[clsid.wpn_rpg7]                = true,
		[clsid.wpn_rpg7_s]              = true,
		[clsid.wpn_shotgun]             = true,
		[clsid.wpn_shotgun_s]           = true,
		[clsid.wpn_svd]                 = true,
		[clsid.wpn_svd_s]               = true,
		[clsid.wpn_svu]                 = true,
		[clsid.wpn_svu_s]               = true,
		[clsid.wpn_usp45]               = true,
		[clsid.wpn_usp45_s]             = true,
		[clsid.wpn_val]                 = true,
		[clsid.wpn_val_s]               = true,
		[clsid.wpn_vintorez]            = true,
		[clsid.wpn_vintorez_s]          = true,
		[clsid.wpn_walther]             = true,
		[clsid.wpn_walther_s]           = true
	},
	addons = {
		[clsid.wpn_grenade_launcher]    = true,
		[clsid.wpn_scope]               = true,
		[clsid.wpn_scope_s]             = true,
		[clsid.wpn_silencer]            = true
	},
	ammo = {
		[clsid.wpn_ammo]                = true,
		[clsid.wpn_ammo_m209]           = true,
		[clsid.wpn_ammo_og7b]           = true,
		[clsid.wpn_ammo_vog25]          = true,
		[clsid.wpn_grenade_f1]          = true,
		[clsid.wpn_grenade_fake]        = true,
		[clsid.wpn_grenade_rgd5]        = true,
		[clsid.wpn_grenade_rpg7]        = true
	},
	outfits = {
		[clsid.equ_exo]                 = true,
		[clsid.equ_military]            = true,
		[clsid.equ_scientific]          = true,
		[clsid.equ_stalker]             = true,
		[clsid.equ_stalker_s]           = true
	},
	artefacts = {
		[clsid.artefact]                = true,
		[clsid.artefact_s]              = true,
		[clsid.art_bast_artefact]       = true,
		[clsid.art_black_drops]         = true,
		[clsid.art_dummy]               = true,
		[clsid.art_electric_ball]       = true,
		[clsid.art_faded_ball]          = true,
		[clsid.art_galantine]           = true,
		[clsid.art_gravi]               = true,
		[clsid.art_gravi_black]         = true,
		[clsid.art_mercury_ball]        = true,
		[clsid.art_needles]             = true,
		[clsid.art_rusty_hair]          = true,
		[clsid.art_thorn]               = true,
		[clsid.art_zuda]                = true
	},
	mobs = {
		[clsid.boar_s]                  = true,
		[clsid.bloodsucker_s]           = true,
		[clsid.dog_s]                   = true,
		[clsid.flesh_s]                 = true,
		[clsid.pseudodog_s]             = true,
		[clsid.psy_dog_s]               = true,
		[clsid.burer_s]                 = true,
		[clsid.cat_s]                   = true,
		[clsid.chimera_s]               = true,
		[clsid.controller_s]            = true,
		[clsid.fracture_s]              = true,
		[clsid.poltergeist_s]           = true,
		[clsid.gigant_s]                = true,
		[clsid.zombie_s]                = true,
		[clsid.tushkano_s]              = true,
		[clsid.snork_s]                 = true,
		[clsid.crow]					= true
		
	},
	npc = {
		[clsid.script_stalker]			= true
	},
	anomalies = {
		[clsid.zone_bfuzz_s]			= true,
		[clsid.zone_mbald_s]			= true,
		[clsid.zone_galant_s]			= true,
		[clsid.zone_mincer_s]			= true,
		[clsid.zone_mosquito_bald]		= true,
	},
	items = {},
	quest_items = {},
	others = {}
}
-- В эту таблицу внести новые классы, если они добавлены в мод и нужны вам в меню для спавна, либо нужно записать их в ini-файл (см. скрипт class_registrator)
local new_clsids = {
	weapons = {'wpn_auto_shotgun_s','wpn_zoom_s'},
	addons = {'wpn_scope_s','wpn_silencer_s','wpn_grenade_launcher_s'},
	ammo = {'wpn_grenade_rgd5_s','wpn_grenade_f1_s','wpn_ammo_vog25_s','wpn_ammo_og7b_s','wpn_ammo_m209_s','wpn_ammo_s'},
	outfits = {'equ_helmet_s'},
--	artefacts = {},
	mobs = {'rat_s','karlik_s','ghostboss_s','swampbeast_s','papakarlo_s'},
	npc = {'script_trader'},
	cars = {'car_s'},
	anomalies = {'zone_radio_s','zone_torrid_s','zone_zharka_s','zone_electra_s','zone_buzz_s','zone_ice_s','zone_elec_s','zone_zhar_s'}
}
	

function main()
	-- добавим в таблицу новые классы, если они есть
	for k,t in pairs(new_clsids) do
		for _,v in ipairs(t) do
			if clsid[v] then
				if classes[k]==nil then classes[k]={} end
				classes[k][clsid[v]] = true
			end
		end
	end
	-- Чтобы не вылетало при открытии незаполненной вкладки
	for k in pairs(classes) do sections[k] = {} end
	
	if io then	-- можем писать в файл
		local fs = getFS()
		-- ini ещё нет, создаём
		if fs:exist("$game_config$", "spawn_list.ltx")==nil then
			local f1 = fs:update_path("$fs_root$", "fsgame.ltx")
			local f2 = fs:update_path("$game_config$", "spawn_list.ltx")
			fs:file_copy(f1, f2)
			
			this.collect()
			
			if ver_prefix~='soc' then f2 = string.gsub(f2,'\\', '//') end
			local file = io.open(f2,"w")
			if file then
				for k,v in pairs(sections) do
					file:write("[",k,"]\n")
					for i,s in pairs(v) do
						file:write(s,"\n")
					end
					file:write("\n")
				end
				file:close(file)
			end
		else	-- ini есть, читаем из него
			local spawn_ini = ini_file("spawn_list.ltx")
			for k in pairs(classes) do
				if spawn_ini:section_exist(k) then
					sections[k] = {}
					local result, id, value
					for i=0,spawn_ini:line_count(k)-1 do
						result, id, value = spawn_ini:r_line(k,i,"","")
						table.insert(sections[k], id)
					end
				end
			end
		end
	else	-- не можем писать в файл: ТЧ, мать его...
		this.collect()
	end
	
	return sections
end

function collect()
	local fs = getFS()
	local path, file, f
	while true do
		path = included[1]
		f = fs:exist("$game_config$", path)
		if f==nil then
			log("collect_sections: incorrect path for file: '%s'", path)
		elseif f.modif ~= 0 then
			file = fs:r_open("$game_config$", path)
			find_somewhat(file:r_stringZ(), path)
		else
		--	log("collect_sections: folder 'config(s)' don't full unpacked! Path not found: [%s]", path)
			log("collect_sections: папка 'config(s)' распакована не полностью! Не найден путь: [%s]", path)
			get_console():show()
		end
		table.remove(included, 1)
		if #included==0 then return log('collest_sections: done!') end
	end
end

-- Ищем секции и инклуды в файле
function find_somewhat(file, path)
	-- если путь многоуровневый, то сформируем путь для инклуда
	local do_path = nil
	if path:find("\\") then
		do_path = ""
		for s in string.gmatch(path, "([%w_]+)\\") do
			do_path = do_path..s.."\\"
		end
	--	log('create do-path: %s', do_path)
	end
	
	local sect
	for line in string.gmatch(file, "[^\n]+") do
		sect = string.match(line, "^(%b[])")
		path = string.match(line, '^#include%s+(%b"")')
		if sect then	-- нашли секцию
			sect = sect:sub(2,-2)
			if check_section(sect) then
			--	log("collect_sections: found section [%s]", sect)
			end
		elseif path then		-- нашли инклуд
			path = path:sub(2,-2)
			if do_path then path = do_path..path end
		--	log("collect_sections: found include file '%s'", path)
			table.insert(included, path)
		end
	end
end

-- Записываем найденные секции в таблицу по группам
function check_section(sect)
	local cls = sys_ini:r_clsid_ex(sect, "class", nil)
	if cls~=nil and sys_ini:line_exist(sect, "visual") then
		-- check inventory items
		if (sys_ini:line_exist(sect, "inv_name") and sys_ini:line_exist(sect, "description")) then
			if sys_ini:r_bool_ex(sect, "can_take", true)==false	-- can't take it
				or string.find(sect, "^mp_") then -- multiplayer
				return false
			end
			
			-- quest items
			if sys_ini:r_bool_ex(sect, "quest_item", false)==true then
				table.insert(sections.quest_items, sect)
				return true
			end
			-- from table 'classes'
			for k,v in pairs(classes) do
				if v[cls] then
					table.insert(sections[k], sect)
					return true
				end
			end
			-- other items
			table.insert(sections.items, sect)
			return true
		else
			-- from table 'classes'
			for k,v in pairs(classes) do
				if v[cls] then
					table.insert(sections[k], sect)
					return true
				end
			end
			-- others
			table.insert(sections.others, sect)
			return true
		end
	end
	return false
end
