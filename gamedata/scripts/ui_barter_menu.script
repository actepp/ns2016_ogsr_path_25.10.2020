
-- Бартер. Автор sarcus.

local oScreen = { }

----------------------------------------
----- Настройки бартера
----------------------------------------
local barter_items = {}

barter_menu = {}
----------------------------------------

----------------------------------------
-----//Бартер у Сидоровича
----------------------------------------
barter_menu["escape_trader"] = 
{ -- Список предложений ( Если после секции(1) таблица(2), то (1)-меню (2)-подменю, иначе секция
	"ammo" , 	{"ammo_5.45x39" , { "ammo_5.45x39_fmj", "ammo_5.45x39_ap" },
			"ammo_7.62x39_fmj",
			"ammo_12x70_buck", 
			"grenade_rgd5" 
			} , 
	"weapons" , 	{ "wpn_toz34", "wpn_saiga12c" },
	"medic"   , 	{ "medkit", "vodka" } , 
	"remkit"  , 	{ "repair_item_outfit", "repair_item_weapon" }
}

barter_items["escape_trader"] = 
{ 
	-- Секция предмета из barter_menu конкретного торговца
	[ "ammo_12x70_buck" ] 	= { af_medusa={ g=1, t=3 }, af_vyvert={ g=1, t=2 } }, -- На что меняем = { Отдаем = кол-во (af_medusa) , Получаем = кол-во (ammo_12x70_buck) }
  	[ "ammo_5.45x39_fmj" ] 	= { af_electra_sparkler={ g=1, t=3 }, af_vyvert={ g=1, t=3 } },
	[ "ammo_5.45x39_ap" ] 	= { af_electra_sparkler={ g=1, t=2 }, af_vyvert={ g=1, t=2 } },
  	[ "ammo_7.62x39_fmj" ] 	= { af_blood={ g=1, t=2 }, af_fireball={ g=1, t=3 } },
    	[ "grenade_rgd5" ]	= { af_vyvert={ g=1, t=2 } },
  
  	[ "wpn_toz34" ] 	= { af_electra_flash ={ g=2, t=1 } },
  	[ "wpn_saiga12c" ] 	= { af_mincer_meat ={ g=3, t=1 } },
  
  	[ "medkit" ] 		= { af_cristall_flower={ g=1, t=6 }, af_gravi={ g=1, t=6 } },
	[ "vodka" ] 		= { af_vyvert={ g=1, t=3 } },
	
	[ "repair_item_outfit"] = { af_gravi={ g=1, t=3 } },
	[ "repair_item_weapon"] = { af_cristall_flower={ g=1, t=3 } }
}
----------------------------------------
-----//Бартер у Кузнецова
----------------------------------------
barter_menu["esc_kuznetsov"] = 
{
	"ammo" , 	{ 										
			"ammo_5.45x39" , { "ammo_5.45x39_fmj", "ammo_5.45x39_ap" },
			"ammo_7.62x39", { "ammo_7.62x39_fmj", "ammo_7.62x39_ap" },
			"ammo_7.62x54_ap",
			"grenade_rgd5" 
			} , 
	"weapons" , 	{ "wpn_abakan", "wpn_ak47" },
	"medic"   , 	{ "medkit_army" }
}

barter_items["esc_kuznetsov" ] = 
{ 
  [ "ammo_5.45x39_fmj" ] 	= { vodka={ g=3, t=5 } },
  [ "ammo_5.45x39_ap" ] 	= { vodka={ g=3, t=3 } },

  [ "ammo_7.62x54_ap" ] 	= { vodka={ g=3, t=1 } },
  
  [ "ammo_7.62x39_fmj" ] 	= { vodka={ g=3, t=3 } },
  [ "ammo_7.62x39_ap" ] 	= { vodka={ g=3, t=2 } },
  
  [ "wpn_abakan" ] 		= { vodka={ g=8, t=1 } },
  [ "wpn_ak47" ] 		= { vodka={ g=10, t=1 } },
  
  [ "grenade_rgd5" ]		= { vodka={ g=1, t=2 } },
  
  [ "medkit_army" ] 		= { vodka={ g=2, t=1 } }
}

----------------------------------------
-----//Бартер У Жилы
----------------------------------------
barter_menu[ "val_bandit_trader" ] = 
{
	"ammo" , 	{ 										
			"ammo_5.45x39_fmj",
			"ammo_9x19_pbp",
			"grenade_rgd5",
			"grenade_f1"
			} , 
	"weapons" , 	{ "wpn_abakan", "wpn_mp5" },
	"medic"   , 	{ "medkit", "vodka" }, 
	"remkit"  , 	{ "repair_item_outfit", "repair_item_weapon" }
}

barter_items[ "val_bandit_trader" ] = 
{
  [ "ammo_5.45x39_fmj" ] 	= { conserva={ g=2, t=1 }, energy_drink={ g=3, t=1 } },
  [ "ammo_9x19_pbp" ] 		= { energy_drink={ g=3, t=1 } },
  [ "grenade_rgd5" ]		= { kolbasa={ g=2, t=1 } },
  [ "grenade_f1" ] 		= { bread={ g=5, t=1 } },
  
  [ "wpn_abakan" ] 		= { conserva={ g=10, t=1 } },
  [ "wpn_mp5" ] 		= { kolbasa={ g=5, t=1 } },
  
  [ "medkit" ] 			= { kolbasa={ g=2, t=1 } },
  [ "vodka" ] 			= { conserva={ g=2, t=1 } },
	
  [ "repair_item_outfit"] 	= { af_cristall_flower={ g=1, t=3 } },
  [ "repair_item_weapon"] 	= { af_rusty_kristall={ g=1, t=3 } }
}

----------------------------------------
-----//Бартер У Ворона  
----------------------------------------
barter_menu[ "amk_vitek_voron" ] = 
{ 
	"ammo" , 	{ 		
			"ammo_9x39", { "ammo_9x39_pab9", "ammo_9x39_sp5", "ammo_9x39_ap" },					"ammo_12x70", { "ammo_12x70_buck", "ammo_12x76_dart", "ammo_12x76_zhekan" }
			},
	"weapons" , 	{
			"submachine_guns", {	"wpn_bizon", "wpn_kriss_super_v", "wpn_mp7a3" },
			"rifles", { "wpn_saiga12c", "wpn_toz34", "wpn_spas12" },
			"wpn_desert_eagle"
			}
}

barter_items["amk_vitek_voron"] = 
{
	[ "ammo_9x39_pab9" ]	= { mutant_psevdodog_tail={ g=3, t=3 } }, 
	[ "ammo_9x39_sp5" ]	= { mutant_psevdodog_tail={ g=3, t=3 } }, 
	[ "ammo_9x39_ap" ]	= { mutant_psevdodog_tail={ g=3, t=2 } },  
  
	[ "ammo_12x70_buck" ] 	= { mutant_dog_tail={ g=3, t=4 }, mutant_fracture_hand={ g=1, t=4 } },
	[ "ammo_12x76_dart" ] 	= { mutant_dog_tail={ g=5, t=3 }, mutant_fracture_hand={ g=2, t=3 } },
	[ "ammo_12x76_zhekan" ] = { mutant_dog_tail={ g=3, t=2 }, mutant_fracture_hand={ g=1, t=1 } },
	
	[ "wpn_bizon" ] 	= { mutant_burer_hand={ g=2, t=1 } },
	[ "wpn_kriss_super_v" ] = { mutant_burer_hand={ g=2, t=1 } },
	[ "wpn_mp7a3" ] 	= { mutant_burer_hand={ g=2, t=1 } },
	
	[ "wpn_toz34" ] 	= { mutant_hand_kontroler={ g=2, t=1 } },
	[ "wpn_spas12" ] 		= { mutant_hand_kontroler={ g=4, t=1 } },
	[ "wpn_saiga12c" ]	= { mutant_hand_kontroler={ g=3, t=1 } },
	[ "wpn_desert_eagle" ] 	= { mutant_hand_kontroler={ g=1, t=1 } }
}

----------------------------------------
-----//Бартер у Бармена
----------------------------------------
barter_menu["bar_barman"] = 
{
	"ammo"  , 	{ 
			"ammo_5.45x39", { "ammo_5.45x39_fmj", "ammo_5.45x39_ap" },
			"ammo_5.56x45", { "ammo_5.56x45_ss190", "ammo_5.56x45_ap" },
			"ammo_9x39" , { "ammo_9x39_pab9", "ammo_9x39_sp5", "ammo_9x39_ap" },
			"grenade_rgd5" 
			}, 
	"weapons", 	{ "wpn_val", "wpn_groza" },
	"medic"  , 	{ "medkit", "vodka", "antirad" }, 
	"remkit" , 	{ "repair_item_outfit", "repair_item_weapon" } 
}

barter_items[ "bar_barman" ] = 
{
	[ "ammo_5.45x39_fmj" ] 	= { af_ameba_slime={ g=1, t=3 }, af_rusty_thorn={ g=1, t=3 } },
	[ "ammo_5.45x39_ap" ] 	= { af_ameba_slime={ g=1, t=2 }, af_rusty_thorn={ g=1, t=2 } },
	[ "ammo_5.56x45_ss190" ]= { af_electra_flash={ g=1, t=3 }, af_cristall_flower={ g=1, t=3 } },
	[ "ammo_5.56x45_ap" ] 	= { af_electra_flash={ g=1, t=2 }, af_cristall_flower={ g=1, t=2 } },
	[ "ammo_9x39_pab9" ]	= { af_gravi={ g=1, t=3 } }, 
	[ "ammo_9x39_sp5" ]	= { af_gravi={ g=1, t=3 } }, 
	[ "ammo_9x39_ap" ]	= { af_gravi={ g=1, t=2 } },
	[ "grenade_rgd5" ] 	= { af_cristall_flower={ g=1, t=3 } },
	
	[ "wpn_val" ]		= { af_fireball={ g=3, t=1 } },
	[ "wpn_groza" ]		= { af_night_star={ g=3, t=1 } },
	
	[ "medkit" ] 		= { af_electra_sparkler={ g=1, t=4 }, af_cristall={ g=1, t=6 }  },
	[ "vodka" ] 		= { af_blood={ g=1, t=3 } },
	[ "antirad" ] 		= { af_cristall_flower={ g=1, t=3 } },
	
	[ "repair_item_outfit"] = { af_mincer_meat={ g=1, t=3 } },
	[ "repair_item_weapon"] = { af_fireball={ g=1, t=3 } }
}

----------------------------------------
-----//Бартер у Петренко
----------------------------------------
barter_menu["bar_dolg_petrenko"] = 
{
	"ammo"    , 	{ 
			"ammo_7.62x54", { "ammo_7.62x54_7h1", "ammo_7.62x54_7h14", "ammo_7.62x54_ap", "ammo_7.62x54r" },
			"ammo_7.62x39", { "ammo_7.62x39_fmj", "ammo_7.62x39_ap" },
			"ammo_vog", { "ammo_vog25", "ammo_vog25p" },
			"heavy_outfit", { "dolg_scientific_outfit", "dolg_black_exoskeleton" }
			}, 
	"weapons", 	{ "wpn_svd", "wpn_svu" },
	"medic"  , 	{ "medkit_army" }
}

barter_items[ "bar_dolg_petrenko" ] =  
{
	[ "ammo_7.62x54_ap" ] 		= { af_electra_flash={ g=1, t=1 } },
	[ "ammo_7.62x54_7h14" ] 	= { af_electra_flash={ g=1, t=2 } },
	[ "ammo_7.62x54_7h1" ] 		= { af_electra_flash={ g=1, t=2 } },
	[ "ammo_7.62x54r" ] 		= { af_rusty_kristall={ g=1, t=1 }, af_night_star={ g=1, t=2 } },
	[ "ammo_7.62x39_fmj" ] 		= { af_medusa={ g=1, t=2 }, af_mincer_meat={ g=1, t=3 } },
	[ "ammo_7.62x39_ap" ] 		= { af_medusa={ g=1, t=1 }, af_mincer_meat={ g=1, t=2 } },

	[ "ammo_vog25" ] 		= { af_blood={ g=1, t=3 }, af_gravi={ g=1, t=5 } },
	[ "ammo_vog25p" ]		= { af_blood={ g=1, t=2 }, af_gravi={ g=1, t=4 } }, 
	
	[ "dolg_scientific_outfit" ]	= { af_cry_2={ g=3, t=1 } },
	[ "dolg_black_exoskeleton" ] 	= { af_cry_2={ g=5, t=1 } },

-----!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Проверить!!!!!!!!!!!!!!!!!!!!!!!!!!!!	

	[ "wpn_svd" ]			= { [ "af_rusty_sea_urchin" ]={ g=2, t=1 } },
	[ "wpn_svu" ]			= { af_soul={ g=2, t=1 } },
	
	[ "medkit_army" ] 		= { af_cristall_flower={ g=1, t=3 } }
}

----------------------------------------
-----//Бартер у Сахарова
----------------------------------------
barter_menu[ "yantar_ecolog_general" ] = 
{
	"ammo"    , 	{ 
			"ammo_12x70", { "ammo_12x70_buck", "ammo_12x76_dart", "ammo_12x76_zhekan" },
			"ammo_gauss", 
			"ammo_super_gauss",
			"outfit", { "protection_outfit" }
			}, 
	"weapons", 	{ "wpn_gauss", "wpn_spas12" },
	"medic"  , 	{ "medkit_scientic", "antirad" },
	"remkit" , 	{ "repair_item_outfit" }
}

barter_items[ "yantar_ecolog_general" ] = 
{
	[ "ammo_12x70_buck" ] 	= { af_electra_sparkler={ g=1, t=5 } },
	[ "ammo_12x76_dart" ] 	= { af_electra_sparkler={ g=1, t=3 } },
	[ "ammo_12x76_zhekan" ] = { af_electra_sparkler={ g=1, t=2 } },

	[ "ammo_gauss" ] 	= { af_night_star={ g=1, t=1 } },
	[ "ammo_super_gauss" ] 	= { af_dummy_spring={ g=1, t=3 } },
	
	[ "protection_outfit" ]	= { af_cry_3={ g=3, t=1 } }, 
	
	[ "wpn_spas12" ]	= { af_ameba_slug={ g=2, t=1 } },
	[ "wpn_gauss" ] 	= { af_babka_2={ g=3, t=1 } },
	
	[ "medkit_scientic" ]	= { af_rusty_thorn={ g=1, t=3 }, af_rusty_kristall={ g=1, t=4 } },
	[ "antirad" ] 		= { af_ameba_slime={ g=1, t=3 } },
	
	[ "repair_item_outfit"] = { af_soul={ g=1, t=6 } }
}

----------------------------------------
-----//Бартер у Скряги
----------------------------------------
barter_menu[ "mil_freedom_member0021" ] = 
{
	"ammo"    , 	{ 
			"ammo_5.56x45", { "ammo_5.56x45_ss190", "ammo_5.56x45_ap" },
			"ammo_7.62x51", { "ammo_7.62x51_fmj", "ammo_7.62x51_ap" },
			"ammo_5.7x28_ss190",
			"ammo_m209",
		
			"grenade_f1",
			}, 
	"weapons", 	{ "wpn_p90", "wpn_fn2000" },
	"medic"  , 	{ "medkit", "antirad" },
	"remkit" , 	{ "repair_item_weapon" }
}

barter_items[ "mil_freedom_member0021" ] =  
{
	[ "ammo_5.56x45_ss190" ]= { af_ameba_slime={ g=1, t=3 }, af_medusa={ g=1, t=3 } },
	[ "ammo_5.56x45_ap" ] 	= { af_ameba_slime={ g=1, t=2 }, af_medusa={ g=1, t=2 } },
	
	[ "ammo_7.62x51_fmj" ]= { af_ameba_slug={ g=1, t=2 } },
	[ "ammo_7.62x51_ap" ] 	= { af_ameba_slug={ g=1, t=1 } },

	[ "ammo_5.7x28_ss190" ] = { af_gravi={ g=1, t=3 }, af_soul={ g=1, t=5 } },

	[ "ammo_m209" ] 	= { af_drops={ g=1, t=4 }, af_cristall_flower={ g=1, t=6 } },
	
	[ "grenade_f1" ] 	= { af_rusty_thorn={ g=1, t=2 } },

	
	[ "wpn_p90" ]		= { af_gold_fish={ g=1, t=1 } },
	[ "wpn_fn2000" ]	= { af_spirit_2={ g=2, t=1 } },
	
	[ "medkit" ] 		= { af_medusa={ g=1, t=4 } },
	[ "antirad" ] 		= { af_vyvert={ g=1, t=4 } },
	[ "repair_item_weapon"] = { af_cristall_flower={ g=1, t=3 } }
}


----------------------------------------
-----//Бартер у Сяка
----------------------------------------
barter_menu[ "Sak" ] = 
{
	"ammo"    , 	{ 
			"ammo_7.62x54", { "ammo_7.62x54_ap", "ammo_7.62x54_7h14", "ammo_7.62x54_7h1" },
			"ammo_9x39"		, { "ammo_9x39_pab9", "ammo_9x39_sp5", "ammo_9x39_ap" },
			"ammo_gauss",
			"militaryspec_outfit"
	}, 
	"weapons", 	{ "wpn_vintorez" },
	"medic"  , 	{ "medkit_army" },
	"remkit" , 	{ "repair_item_outfit" }
}

barter_items[ "Sak" ] = {  
	[ "ammo_7.62x54_ap" ] 		= { af_mincer_meat={ g=1, t=1 } },
	[ "ammo_7.62x54_7h14" ] 	= { af_mincer_meat={ g=1, t=2 } },
	[ "ammo_7.62x54_7h1" ]		= { af_mincer_meat={ g=1, t=2 } },
	
	[ "ammo_9x39_pab9" ] 		= { af_gravi={ g=1, t=3 } },
	[ "ammo_9x39_sp5" ] 		= { af_gravi={ g=1, t=3 } },
	[ "ammo_9x39_ap" ]		= { af_gravi={ g=1, t=2 } },
	
	[ "ammo_gauss" ]		= { af_fireball={ g=1, t=1 } },
	
	[ "militaryspec_outfit" ] 	= { af_dik_2={ g=2, t=1 } },
	
	[ "wpn_vintorez" ] 		= { af_cristall={ g=3, t=1 } },
	
	[ "medkit_army" ] 		= { af_rusty_kristall={ g=1, t=3 } },
	
	[ "repair_item_outfit" ] 	= { af_cristall_flower={ g=1, t=3 } }
}	

----------------------------------------
-----//Бартер у Шерстюка
----------------------------------------
barter_menu[ "sak_military_stalker" ] = 
{
	"ammo" , 	{ 										
			"ammo_5.45x39" , { "ammo_5.45x39_fmj", "ammo_5.45x39_ap" },
			"ammo_7.62x54r",
			"grenade_f1" 
			} , 
	"weapons" , 	{	"fake_wpn_knife", "wpn_pkm" },
	"heavy_outfit", { 	"militaryspec_outfit" },
	"medic"   , 	{	"medkit_army" }
}

barter_items["sak_military_stalker" ] = 
{ 
  [ "ammo_5.45x39_fmj" ] 	= { vodka={ g=3, t=5 } },
  [ "ammo_5.45x39_ap" ] 	= { vodka={ g=3, t=3 } },
  [ "ammo_7.62x54r" ] 		= { vodka={ g=7, t=1 } },
  
  [ "wpn_pkm" ] 		= { vodka={ g=20, t=1 } },
  [ "fake_wpn_knife" ] 		= { vodka={ g=1, t=1 } },
  
  [ "militaryspec_outfit" ] 	= { vodka={ g=20, t=1 } },
  
  [ "grenade_f1" ]		= { vodka={ g=1, t=1 } }, 
  
  [ "medkit_army" ] 		= { vodka={ g=1, t=1 } }
}




----------------------------------------
-----//Бартер у Вэла by RAY
----------------------------------------
barter_menu["for_vell"] = 
{ -- Список предложений ( Если после секции(1) таблица(2), то (1)-меню (2)-подменю, иначе секция
	"ammo" , 	{ "ammo_12x70", { "ammo_12x70_buck", "ammo_12x76_dart", "ammo_12x76_zhekan" },
			"grenade_rgd5",
			 "ammo_5.56x45", { "ammo_5.56x45_ss190", "ammo_5.56x45_ap" },
			"ammo_7.62x39", { "ammo_7.62x39_fmj", "ammo_7.62x39_ap" }
			} , 
	"weapons" , 	{ "wpn_sig_m2", "wpn_sr25_mk11_mod0_sk1" },
	"medic"   , 	{ "medkit_scientic", "antirad" } , 
	"remkit"  , 	{ "repair_item_weapon" }
}

barter_items["for_vell"] =   
{ 
	-- Секция предмета из barter_menu конкретного торговца
	[ "ammo_12x70_buck" ] 	= { af_rusty_thorn ={ g=1, t=5 } }, 
	[ "ammo_12x76_dart" ] 	= { af_rusty_thorn ={ g=1, t=4 } }, 
	[ "ammo_12x76_zhekan" ] = { af_rusty_thorn ={ g=1, t=3 } }, 

    	[ "grenade_rgd5" ]	= { af_ameba_slime ={ g=1, t=5 } },

  	[ "ammo_5.56x45_ss190" ]= { af_drops={ g=1, t=3 } },
	[ "ammo_5.56x45_ap" ] 	= { af_drops={ g=1, t=2 } },

  	[ "ammo_7.62x39_fmj" ] 	= { af_electra_flash={ g=1, t=3 } },
  	[ "ammo_7.62x39_ap" ] 	= { af_electra_flash={ g=1, t=2 } },
  
  	[ "wpn_sig_m2" ] 	= { af_ameba_mica ={ g=3, t=1 } },
  	[ "wpn_sr25_mk11_mod0_sk1" ] 		= { af_simbion ={ g=3, t=1 } },
  
  	[ "medkit_scientic" ] 	= { af_ameba_slug ={ g=1, t=3 } },
	[ "antirad" ] 		= { af_cristall_flower={ g=1, t=5 } },
	
	[ "repair_item_weapon"] = { af_gravi={ g=1, t=3 } }
}


----------------------------------------
-----//Бартер у Макса by RAY
----------------------------------------
barter_menu["mil_freedom_member0018"] = 
{
	"ammo" , 	{ 										
			"ammo_flame"
			} , 
	"weapons", { "wpn_svu_m1" }
}

barter_items["mil_freedom_member0018" ] = 
{ 
  [ "ammo_flame" ] 	= { vodka={ g=15, t=1 } },

  [ "wpn_svu_m1" ] 		= { vodka={ g=10, t=1 } }
}




----------------------------------------
-----//Бартер у Холода by RAY
----------------------------------------
barter_menu["marsh_barman"] = 
{
	"ammo" , 	{ 		
			"ammo_7.62x25_ps" ,
			"ammo_7.62x51box" ,
			"ammo_5.45x39_fmj" ,
			"ammo_5.56x45_ss190" ,
			"ammo_9x39_pab9"
			} , 
	"medic"   , 	{ "medkit_army", "antirad" }

}

barter_items["marsh_barman" ] = 
{ 
  [ "ammo_7.62x25_ps" ] 	= { mushroom={ g=3, t=3 } },
  [ "ammo_7.62x51box" ] 	= { mushroom={ g=3, t=3 } },
  [ "ammo_5.45x39_fmj" ] 	= { mushroom={ g=3, t=4 } },
  [ "ammo_5.56x45_ss190" ] 	= { mushroom={ g=3, t=4 } },
  [ "ammo_9x39_pab9" ] 		= { mushroom={ g=3, t=3 } },

  [ "medkit_army" ] 		= { mushroom={ g=3, t=3 } },
  [ "antirad" ] 		= { mushroom={ g=3, t=3 } }
}



----------------------------------------
----- Наименования  
----------------------------------------

local barter_translate_table =  --
{
	[ "ammo" ] = "Боеприпасы, снаряжение",
	
	--Артефакты
	[ "artefact" ] = "Артефакты", 

	--Оружие
	[ "weapons" ] = "Оружие",
	[ "submachine_guns" ] = "Пистолет-пулеметы",
	[ "rifles" ] = "Ружья",

	--Патроны, гранаты
	[ "grenade" ] = "Гранаты",
	
	[ "ammo_gauss" ] = "Заряды 9мм M72-M «Гаусс»",
	[ "ammo_vog" ] = "Гранаты для подствола",
	
	[ "ammo_12x70" ] = "Патроны 12х70",
	[ "ammo_5.45x39" ] = "Патроны 5.45х39 мм",
	[ "ammo_5.56x45" ] = "Патроны 5.56х45 мм",
	[ "ammo_7.62x39" ] = "Патроны 7.62х39 мм",  
	[ "ammo_7.62x54" ] = "Патроны 7.62х54 мм",
	[ "ammo_7.62x51" ] = "Патроны 7.62х51 мм",
	[ "ammo_9x39" ] = "Патроны 9x39 мм",
	[ "ammo_9x19" ] = "Патроны 9x19 мм", 
	[ "ammo_7.62x25" ] = "Патроны 7.62x25 мм",  
	[ "ammo_7.92x57" ] = "Патроны 7.92x57 мм",

	--Бронежилеты
	[ "outfit" ] = "Костюмы",
	[ "heavy_outfit" ] = "Бронежилеты",
	
	[ "ingridients" ] = "Ингридиенты для огнесмеси",
	
	--Еда
	[ "food" ] = "Еда",
	
	--Медицинские препараты 
	[ "medic" ] = "Медицинские препараты",
	
	--Ремкомплекты
	[ "remkit" ] = "Ремкомплекты",

	--Части мутантов
	[ "mutant_parts" ] = "Части мутантов"
}

local oItemList = nil

local cItemState = nil
local sCurrItemIndex = nil
local sCurrBrtItemIndex = nil

oBarter = nil

local mItemsMenu  = { mPrefOpened = "-", mPrefClosed = "+" }
local cBarterParams = { gs = nil, ts = nil, g = 0, t = 0 }

--///////////////////////////
class "spawn_item" ( CUIListItemEx )

function spawn_item:__init(  ) super()
	self:SetWndRect		( 0, 0, 250, 18 )
	
	self.itm 				= CUIStatic()
	self.itm:SetAutoDelete	( true )
	self:AttachChild		( self.itm )
	self.itm:SetWndRect		( 0, 0, 250, 18 )
	self.itm:SetText		( "item_name" )
	self.itm:SetTextY		( 2  )
	self.itm:SetFont		( GetFontLetterica18Russian() )
	self.itm:ClipperOn()

	self.sct				= CUIStatic()
	self.sct:SetAutoDelete	( true )
	self.sct:Show			( false )
	self:AttachChild		( self.sct )
	--self.sct:SetWndRect		( 200, 0, 0, 16 )
	
end

--///////////////////////////
class "spawn_barter_item" ( CUIListItemEx )

function spawn_barter_item:__init(xml) super()
	self:SetWndRect		( 0, 0, 300, 16 )
	
	self.itm 				= CUIStatic()
	self.itm:SetAutoDelete	( true )
	self:AttachChild		( self.itm )
	self.itm:SetWndRect		( 0, 0, 210, 16 )
	self.itm:SetText		( "item_name" )
	self.itm:SetTextY		( 2 )
	self.itm:SetFont		( GetFontLetterica16Russian() )

	self.rel				= xml:InitStatic( "bart_item:relation", self )
	self.rel:SetAutoDelete	( true )
	self.rel:SetTextY		( 2 )
	
	self.sct				= CUIStatic()
	self.sct:SetAutoDelete	( true )
	self.sct:Show			( false )
	self:AttachChild		( self.sct )
	self.sct:SetWndRect		( 210, 0, 0, 16 )
	
	self.gn					= CUIStatic()
	self.gn:SetAutoDelete	( true )
	self.gn:Show			( false )
	self:AttachChild		( self.gn )
	self.gn:SetWndRect		( 260, 0, 0, 16 )
	
	self.tn					= CUIStatic()
	self.tn:SetAutoDelete	( true )
	self.tn:Show			( false )
	self:AttachChild		( self.tn )
	self.tn:SetWndRect		( 260, 0, 0, 16 )
	
	self.itm_t					= CUIStatic()
	self.itm_t:SetAutoDelete	( true )
	self.itm_t:Show				( false )
	self.itm_t:ClipperOn		( true )
	self:AttachChild			( self.itm_t )
	self.itm_t:SetWndRect		( 260, 0, 0, 16 )
end
--///////////////////////////

--///////////////////////////
class "barter" ( CUIScriptWnd )

--///////////////////////////
function barter:__init( first_speaker, second_speaker ) super()
	self:SetFont( GetFontMedium() ) 
	
	self.first_speaker = first_speaker
	self.second_speaker = second_speaker
	
	self.trader_name = self.first_speaker:name()
	--self.trader_name = "bar_dolg_petrenko" --"escape_trader" "bar_dolg_petrenko" "mil_freedom_member0018" 
	--"doktor" "Sak" "mil_freedom_member0021" "yantar_ecolog_general"
	--sak_military_stalker esc_bridge_soldier5 val_bandit_trader amk_vitek_voron bar_barman
	
	self:InitControls()
	self:InitCallBacks()
end

--///////////////////////////
function barter:__finalize() end

--///////////////////////////
function barter:InitControls()
	
	self:SetAutoDelete( true )
	self:Init( 20, 20, 645, 460 )
	
	--------------------------------
	-----MAIN FRAME WINDOW
	--------------------------------
	
	self.xml 			= CScriptXmlInit()
	self.xml:ParseFile	( "ui_barter_menu.xml" )
	
	self.main_frame = self.xml:InitStatic( "background", self ) 
	self.main_frame:SetAutoDelete	( true )

	--------------------------------
	-----FRAMES
	--------------------------------
	self.menu_frame = self.xml:InitFrame	( "menu_frame", self )
	self.menu_frame:SetAutoDelete			( true )
	
	local menu_frame_caption 				= self.xml:InitStatic( "menu_frame:caption", self.menu_frame )
	menu_frame_caption:SetAutoDelete		( true )
	
	---------------------------------
	self.desc_frame = self.xml:InitFrame	( "desc_frame", self )
	self.desc_frame:SetAutoDelete			( true )
	
	local desc_frame_caption 				= self.xml:InitStatic( "desc_frame:caption", self.desc_frame )
	desc_frame_caption:SetAutoDelete		( true )

	---------------------------------
	self.bart_frame = self.xml:InitFrame	( "bart_frame", self )
	self.bart_frame:SetAutoDelete			( true )

	local bart_frame_caption 				= self.xml:InitStatic( "bart_frame:caption", self.bart_frame )
	bart_frame_caption:SetAutoDelete		( true )
	
	local bart_frame_item_name				= self.xml:InitStatic( "bart_frame:item_name", self.bart_frame )
	bart_frame_item_name:SetAutoDelete		( true )
	
	local bart_frame_item_relation			= self.xml:InitStatic( "bart_frame:item_relation", self.bart_frame )
	bart_frame_item_relation:SetAutoDelete	( true )
	
	--------------------------------
	-----DESCRIPTION
	--------------------------------
	self.equip_desc_ico_wnd = self.xml:InitStatic	( "equip_desc_ico_wnd", self.desc_frame )
	self.equip_desc_ico_wnd:SetAutoDelete			( true )
	
	self.equip_desc_ico = self.xml:InitStatic	( "equip_desc_ico", self.equip_desc_ico_wnd )
	self.equip_desc_ico:SetAutoDelete			( true )
	
	self.ico_width = self.equip_desc_ico:GetWidth()
	self.ico_height = self.equip_desc_ico:GetHeight()

	local equip_desc_wnd_tl 					= self.xml:InitStatic( "equip_desc_top_line", self.desc_frame )
	equip_desc_wnd_tl:SetAutoDelete				( true )
	
	self.scroll_view = self.xml:InitScrollView	( "equip_desc_scroll", self.desc_frame )

	self.equip_desc_txt = self.xml:InitStatic	( "equip_desc_txt", nil )
	self.equip_desc_txt:SetAutoDelete			( true )
	
	self.scroll_view:AddWindow					( self.equip_desc_txt, true )
	
	--------------------------------
	-----MAIN MENU ITEMS LIST
	--------------------------------
	self.oItemsMenuList 				= CUIListWnd()
	self.oItemsMenuList:SetAutoDelete	( true )
	self.oItemsMenuList:SetWindowName	( "itm_list" )
	self.oItemsMenuList:SetItemHeight	( 18 )
	self.oItemsMenuList:Init			( 8, 25, 250, 323 )
	self.oItemsMenuList:EnableScrollBar	( true )
	self.oItemsMenuList:ShowSelectedItem( true )
	self:Register						( self.oItemsMenuList )
	self.menu_frame:AttachChild			( self.oItemsMenuList )

	--------------------------------
	-----BARTER MENU ITEMS LIST
	--------------------------------
	self.oBrtItemsMenuList 					= self.xml:InitList( "bart_list", self.bart_frame )
	self.oBrtItemsMenuList:SetAutoDelete	( true )
	self.oBrtItemsMenuList:ShowSelectedItem	( true )
	self.oBrtItemsMenuList:EnableScrollBar	( true )
	self:Register							( self.oBrtItemsMenuList, "brt_itm_list" )

	--------------------------------
	-----RESULT STRING
	--------------------------------
	self.result_str 				= self.xml:InitStatic( "result_str", self.main_frame )
	self.result_str:SetAutoDelete	( true )
	
	--------------------------------
	-----BUTTONS
	--------------------------------
	self.oBtnOk 		= self.xml:Init3tButton( "btn_ok", self.main_frame )
	self.oBtnOk:Enable	( false )
	self:Register		( self.oBtnOk, "btn_ok" )
	
	self.oBtnCancel 		= self.xml:Init3tButton( "btn_cancel", self.main_frame )
	self.oBtnCancel:Enable	( true )
	self:Register		( self.oBtnCancel, "btn_cancel" )
    --------------------------------
    
  oItemList = barter_menu[ self.trader_name ]
  if not oItemList then return end
  
  cItemState = {}
	sCurrItemIndex = -1
	sCurrBrtItemIndex = -1
	
	self:ClearItemsMenu()
  self:CreateItemsMenu( oItemList, nil, 0 )
  self:UpdateItemsMenu( oItemList, 0 )
end

--///////////////////////////
function barter:InitCallBacks()
	self:AddCallback( "itm_list"    , ui_events.LIST_ITEM_CLICKED, self.OnListItemClicked      	, self )
	self:AddCallback( "brt_itm_list", ui_events.LIST_ITEM_CLICKED, self.OnListBarterItemClicked	, self ) 
	self:AddCallback( "btn_ok"			, ui_events.BUTTON_CLICKED, self.OnButtonOkClicked					, self )
	self:AddCallback( "btn_cancel"	, ui_events.BUTTON_CLICKED, self.on_quit										, self )
end

--///////////////////////////
function barter:SetMenuItemPref( sItemSect )
	local sPref
	if cItemState[ sItemSect ].top == 0 then return "" end
	if cItemState[ sItemSect ].st == 0 then
		sPref = mItemsMenu.mPrefClosed
	else
		sPref = mItemsMenu.mPrefOpened		
	end
	return sPref
end

--///////////////////////////
function barter:ClearItemsMenu()
	if self.oItemsMenuList:GetSize() ~= 0 then
		self.oItemsMenuList:RemoveAll()  
	end
end

--///////////////////////////
function barter:CreateItemsMenu( tbl, sItemSect, lv )
	if lv == nil then lv = 0 end
	local oTopItemSect = nil
	
	for i = 1, #tbl do
		local oItem = tbl[ i ]
		if type( oItem ) == "string" then
			
			cItemState[ oItem ] = {}
			cItemState[ oItem ].lv = lv
			cItemState[ oItem ].st = 0
			cItemState[ oItem ].top = 0

			if sItemSect and cItemState[ sItemSect ] then
				cItemState[ sItemSect ].top = 1	
			end
			
			oTopItemSect = oItem
		else
			self:CreateItemsMenu( oItem, oTopItemSect, ( lv + 1 ) )
			oTopItemSect = nil
		end	
	end
end

--///////////////////////////
function barter:UpdateItemsMenu( tbl, lv )
	local out_menu = 0
	
	for i = 1, #tbl do
		local oItem = tbl[ i ]
		if type( oItem ) == "table" then
			if out_menu == 1 then
				self:UpdateItemsMenu( oItem, ( lv + 1 ) )
				out_menu = 0
			end
		else
			local sItemSect = oItem
			local sPref 	= self:SetMenuItemPref( sItemSect )
			
			local sItemName = self:Translate( sItemSect )

			local _itm				= spawn_item( )
			_itm.itm:SetText		( sPref.." "..sItemName )
			_itm.sct:SetText	( sItemSect )

			local iTemState = cItemState[ sItemSect ]
			
			_itm.itm:SetTextX	( 12 * iTemState.lv )
			if iTemState.top == 1 then
				_itm.itm:SetTextColor	( 255, 238, ( 123 + iTemState.lv*15 ) , 26 + iTemState.lv*15 )
				if iTemState.lv > 0 then
					_itm.itm:SetFont		( GetFontLetterica16Russian() )	
				end
			else
				_itm.itm:SetFont		( GetFontLetterica16Russian() )
				_itm.itm:SetTextColor	( 255, 216, 186, 140 )	
			end
			
			self.oItemsMenuList:AddItem	( _itm )
			
			if ( iTemState.top == 1 ) and ( iTemState.st == 1 ) then 
				out_menu = 1 
			end
		end		
	end
end

--///////////////////////////
function barter:OnListItemClicked()

	if self.oItemsMenuList:GetSize() == 0 then return end
	
	local nItemIndex = self.oItemsMenuList:GetSelectedItem()
	
	if nItemIndex == -1 then return end
	
	local oItem	= self.oItemsMenuList:GetItem( nItemIndex )    
	local oSect	= oItem.sct:GetText()
	
	if not cItemState[ oSect ] then return end
	
	if cItemState[ oSect ].top == 1 then
		if cItemState[ oSect ].st == 0 then
			cItemState[ oSect ].st = 1
		else
			cItemState[ oSect ].st = 0
		end
		
		sCurrItemIndex = -1
		self:ClearItemsMenu()
		self:UpdateItemsMenu( oItemList, 0 )
		self.oItemsMenuList:ScrollToEnd()
	else
	
		if sCurrItemIndex == nItemIndex then return end
		
		sCurrItemIndex = nItemIndex
		sCurrBrtItemIndex = -1
		self.result_str:SetTextColor( 255, 255, 255, 182 )
		self.result_str:SetText( "..." )
		
		self.oBtnOk:Enable( false )
		self:OnListChildItemClicked( oSect )
	end
end

--///////////////////////////
function barter:OnListChildItemClicked( sItemSect )
	local sItemDescText = ""
	
	if iniSectionExistSimple( sItemSect ) then
		local x = getIniValueU32Simple( sItemSect, "inv_grid_x") * 50
		local y = getIniValueU32Simple( sItemSect, "inv_grid_y") * 50
		
		local h = getIniValueU32Simple( sItemSect, "inv_grid_height" ) * 50
		local w = getIniValueU32Simple( sItemSect, "inv_grid_width"  ) * 50
		
		self.equip_desc_ico:InitTexture			( "ui\\ui_icon_equipment" )
		self.equip_desc_ico:SetOriginalRect		( x, y, w, h )
		
		local hKoef = ( self.ico_height < h ) and self.ico_height / h or 0.8
		local wKoef = ( self.ico_width < w ) and self.ico_width / w or 0.8
		koef 		= ( hKoef < wKoef ) and hKoef or wKoef

		self.equip_desc_ico:SetWidth( koef * w * oScreen.c )
		self.equip_desc_ico:SetHeight( koef * h )
		
		local offsetX = tonumber( ( self.ico_width  - koef * w * oScreen.c  ) / 2 )
		local offsetY = tonumber( ( self.ico_height  - h * koef ) / 2 )
		if offsetY < 0 then offsetY = 0 end
		--self.equip_desc_ico:SetTextureOffset	( offsetX, offsetY )
		self.equip_desc_ico:SetWndPos( offsetX, offsetY )
		self.equip_desc_ico:SetStretchTexture( true )
		
		local sItemDescSect = getIniValueStringSimple( sItemSect, "description" )
		sItemDescText = game.translate_string( sItemDescSect ) or ""
		
		self.equip_desc_txt:SetText( sItemDescText )
		self.scroll_view:ScrollToBegin()

		self:UpdateBarterItemsMenu( sItemSect )
	end
end

--///////////////////////////
function barter:UpdateBarterItemsMenu( sItemSect )
	if self.oBrtItemsMenuList:GetSize() ~= 0 then
		self.oBrtItemsMenuList:RemoveAll()  
	end

	if not sItemSect or not barter_items[ self.trader_name ] then return end
	
	local oBarterItems = barter_items[ self.trader_name ][ sItemSect ]
	if not oBarterItems then return end
	
	for oSect,v in pairs( oBarterItems ) do
		if v.t ~= nil and v.g ~= nil then 
			local _itm				= spawn_barter_item(self.xml)
			_itm.itm:SetText		( self:Translate( oSect ) )
			_itm.itm:SetTextColor	( 255, 216, 186, 140 )
			
			_itm_rel_str = game.translate_string( "%c[255,0,255,255]"..v.g.."%c[default] :%c[255,0,255,255] "..v.t)
			_itm.rel:SetText		( _itm_rel_str )
			_itm.sct:SetText		( oSect )
			_itm.gn:SetText			( v.g )
			_itm.tn:SetText			( v.t )
			_itm.itm_t:SetText		( sItemSect )
			
			self.oBrtItemsMenuList:AddItem	( _itm )
		end
	end
end

--///////////////////////////
function barter:OnListBarterItemClicked()
	if self.oBrtItemsMenuList:GetSize() == 0 then return end
	
	local nItemIndex = self.oBrtItemsMenuList:GetSelectedItem()
	
	if nItemIndex == -1 then return end
	
	local oItem	 = self.oBrtItemsMenuList:GetItem( nItemIndex )    
	local oSect	 = oItem.sct:GetText()
	local oTSect = oItem.itm_t:GetText()
	
	if sCurrBrtItemIndex == nItemIndex then return end
	sCurrBrtItemIndex = nItemIndex
	
	local oGNum  = oItem.gn:GetText()
	local oTNum  = oItem.tn:GetText()
	
	cBarterParams.gs = oSect 
	cBarterParams.ts = oTSect
	cBarterParams.g  = tonumber( oGNum )
	cBarterParams.t  = tonumber( oTNum )
	
	if cBarterParams.g ~= 0 and cBarterParams.t ~= 0 then
		self.oBtnOk:Enable( true )
	else 
		self.oBtnOk:Enable( false )
	end
end

--///////////////////////////
function barter:OnButtonOkClicked()
	if not iniSectionExistSimple( cBarterParams.gs )  then
		self.result_str:SetText( "Ошибка! Не найдена секция предмета обмена." )
		return
	end
  if sak.have_item_namber( cBarterParams.gs, cBarterParams.g ) == true then
		sak.out_item_namber( cBarterParams.gs, cBarterParams.g )
			
		if string.find( cBarterParams.ts, "repair_item_" ) then
			local repiout = amk.load_variable( cBarterParams.ts, 0 )

			repiout = repiout + cBarterParams.t
			amk.save_variable( cBarterParams.ts, repiout )
			sh_remnabor_ext.set_weight( "repair_done" )
		else
			new_dialog.create_items( db.actor, cBarterParams.ts, cBarterParams.t )
		--	dialogs.relocate_item_section( first_speaker, cBarterParams.ts, "in" )
		end
		
		self.result_str:SetText( game.translate_string("Получен предмет: %c[255,0,255,255]"..self:Translate( cBarterParams.ts ).."("..cBarterParams.t..")") )
	else
		self.result_str:SetTextColor( 255,255,0,0 )
		self.result_str:SetText( "Нет предметов для обмена !" )
	end
	--"gItem sect: ["..cBarterParams.gs.."], tItem sect: ["..cBarterParams.ts.."], give num:"..cBarterParams.g..", take num:"..cBarterParams.t
end


--///////////////////////////
function barter:Translate( item )
	local sItemNameShort = ""
	if iniSectionExistSimple( item ) then
		local sItemIniVal = getIniValueStringSimple( item, "inv_name_short" ) or getIniValueStringSimple( item, "inv_name" )
		sItemNameShort = game.translate_string( sItemIniVal ) or item
	else
		sItemNameShort = barter_translate_table[ item ] or item
	end
	return sItemNameShort
	--return barter_translate_table[ item ] or item
end

--///////////////////////////
function barter:OnKeyboard( dik, keyboard_action )
	CUIScriptWnd.OnKeyboard( self, dik, keyboard_action )
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_ESCAPE then
			self:on_quit()
		end
	end
	return true
end

--///////////////////////////
function barter:on_quit()
	DesibleBarterMenu()
	self:GetHolder():start_stop_menu ( self, true )
end

--///////////////////////////
function EnableBarterMenu( first_speaker, second_speaker )
	get_console():execute("main_menu off")
	
	oScreen = { r = 1, c = 1, w = device().width, h = device().height }
	oScreen.r = oScreen.h / oScreen.w
	oScreen.c = oScreen.r / ( 768 / 1024 )
	
	oBarter = barter( first_speaker, second_speaker )
	level.start_stop_menu( oBarter, true )
end

--///////////////////////////
function DesibleBarterMenu()
	oBarter = nil
	
	oItemList = nil
	
	cItemState = nil
	sCurrItemIndex = nil
	sCurrBrtItemIndex = nil
	
	cBarterParams.gs = nil 
	cBarterParams.ts = nil
	
	oScreen = {}
end

--EnableBarterMenu( "", "" )


--spawner("vodka,10")
--[[spawner("bread,1")

	К сведению
	local section_name = item:section() or alife():object(item:id()):section_name()
	local sFunctionStr = "oBarter:MainMenuItemClick(\""..sItmName.."\", "..shiftSize..")"
	self:AddCallback( sItmName, ui_events.BUTTON_CLICKED,	loadstring( sFunctionStr ), self )
]]