-- -*- mode: lua; encoding: windows-1251 -*-
-- Основано на скрипте из аддона от naxac

function attach( sm )
  sm:subscribe({ signal = "on_monster_death", fun = this.on_death })
  sm:subscribe({ signal = "on_monster_before_hit", fun = this.on_hit })
end

local rate_difference = 0.8 					-- На какое значение понизится вероятность найти часть после хита

-- порядок в массиве имеет значение
local monsters = {
	{ sect = "bloodsucker_red",		bones = { 14 }, part = "mutant_krovosos_red_jaw"},
	{ sect = "sucker",		bones = { 14 }, part = "mutant_krovosos_jaw"},
	
	{ sect = "boar",		bones = { 39,41,34,36,3,5,8,10 }, part = "mutant_boar_leg" },
	
	{ sect = "flesh",		bones = { 14 }, part = "mutant_flesh_eye" },

	{ sect = "burer_red",		bones = { 18,19,24,31,32,37 }, part = "mutant_burer_red_hand"},	
	{ sect = "burer",		bones = { 18,19,24,31,32,37 }, part = "mutant_burer_hand"},
	
	{ sect = "controller_yazva", bones = { 14 }, part = "red_mozg" },
	{ sect = "controller_mozg", bones = { 14 }, part = "mozg" },
	{ sect = "controller_tubeman", bones = { 14 }, part = "bezoar" },
	{ sect = "controller",	bones = { 24,25,40,41 }, part = "mutant_hand_kontroler"},
	
	{ sect = "pseudodog",	bones = { 32 }, part = "mutant_psevdodog_tail" },
	{ sect = "psy_dog",		bones = { 32 }, part = "mutant_psevdodog_tail" },
	{ sect = "dog",			bones = { 30,31 }, part = "mutant_dog_tail" },
	
	{ sect = "fracture",	bones = { 24,23 }, part = "mutant_fracture_hand" },
	
	{ sect = "gigant",		bones = { 44,52 }, part = "mutant_psevdogigant_hand" },
	
	{ sect = "himera",		bones = { 4,9,23,33 }, part = "mutant_chimera_kogot" },
	
	{ sect = "snork",		bones = { 2,3,4,7,8,9 }, part = "mutant_snork_leg" },
	
	{ sect = "tushkan",		bones = { 25 }, part = "mutant_face_tushkano" },
		
	{ sect = "zombie_babka",	bones = { 10,11}, part = "mutant_zombie_teeth" },
	{ sect = "zombi",		bones = { 18,19,20,30,31,32 }, part = "mutant_zombie_hand" },
	
	{ sect = "tarakan",		bones = { 35 }, part = "mutant_tarakan_part" },

	{ sect = "ratlike",		bones = { 46,47,48,49,50 }, part = "mutant_ratlike_tail" }, 
	{ sect = "rat",			bones = { 10 }, part = "mutant_spleen_rat" },
		
	{ sect = "spider",		bones = { 25,26,27 }, part = "mutant_spider_part" },
	
	{ sect = "bibli",		bones = { 19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40 }, part = "part_digitis_biblio" },
	
	{ sect = "polter",		bones = { 4 }, part = "mutant_poltergeist_glas" },
	
	{ sect = "cat",			bones = { 28,29 }, part= "mutant_tail_cat" },
	
	{ sect = "swamp",		bones = { 0 }, part = "mutant_swamp_heart" },
	
	{ sect = "medwed",			bones = { 5,4,9,10,20,21,22,40,41,42 }, part = "mutant_medwed_paw" }
}

local del_corpse = {
	m_poltergeist_normal_flame = true,
	m_poltergeist_strong_flame = true
}

	
local tbl_hit = {}

function on_hit(obj, hit_data)
	local sect = obj:section()
	if del_corpse[sect] then return false end
	if obj:name() == "controller_yazva" then return false end -- Контроллера с красным мозгом не трогаем

	local id = obj:id()
	local th = tbl_hit[id]
	local changed = false
		
	if hit_data.hit_type == hit.explosion or hit_data.hit_type == hit.burn then
		for i, v in ipairs(monsters) do
			if string.find(sect,v.sect) then
				amk.remove_item_from_inventory_by_name(v.part, obj)
				return false
			end
		end
	end
	
	if th == nil then
		for i, v in ipairs(monsters) do
			if string.find(sect,v.sect) then
				for ii, vv in ipairs (v.bones) do
					if vv == hit_data.bone_id then
						th = {}
						th.hits = 1
						th.part = v.part
						changed = true
						break
					end
				end
			break
			end
		end
	elseif th == false then
		return false
	else
		for i, v in ipairs(monsters) do
			if string.find(sect,v.sect) then
				for ii, vv in ipairs (v.bones) do
					if vv == hit_data.bone_id then
						th.hits = th.hits + 1
						changed = true
						break
					end
				end
			end
		end
	end
	if changed then
		log3( "!![%s] This monster took [%s] hits", script_name(), th.hits )
		if not (obj:alive()) then
			calculate_rate(obj, th.hits, th.part)
		end
		tbl_hit[id] = th
	end
end

function on_death(obj)
	local id = obj:id()
	if alife():object(id) == nil then 
		tbl_hit[id] = nil
		return
	end

	if del_corpse[obj:section()] then		-- удаляем тушку
		alife():release( alife():object(id), true )
		return
	end
	if obj:name() == "controller_yazva" then return end -- Контроллера с красным мозгом не трогаем
	local th = tbl_hit[id]
	if not th then return end
	if not th.hits then return end
	

	calculate_rate(obj, th.hits, th.part)

	--tbl_hit[id] = nil -- Не знаю, надо ли это
end

function calculate_rate(obj, hits, part)
	if not (obj or part) then return end
	
	local spawn_rate = 1
		
	for i = 1, hits, 1 do
		spawn_rate = spawn_rate * (1 - rate_difference)
	end
	
	log3( "!![%s] Spawn rate now is [%s]", script_name(), spawn_rate )
	
	local num = math.random()
	if  num> spawn_rate then
		amk.remove_item_from_inventory_by_name(part, obj)
		log3( "!![%s] Part [%s] should be removed", script_name(), part )
	end
end
