----------------------------------------------------------------------------------------------------------------------
-- STALKER NPC INFO
----------------------------------------------------------------------------------------------------------------------
function set_npc_info(npc, ini, scheme, section) counterAdd("stalker_generic.set_npc_info")

	local in_info	= get_infos_from_data(npc, utils.cfg_get_string(ini, section, "in", npc, false, ""))
	local out_info	= get_infos_from_data(npc, utils.cfg_get_string(ini, section, "out", npc, false, ""))

	for k,v in pairs(in_info) do
		npc:give_info_portion(v)
	end
	for k,v in pairs(out_info) do
		npc:disable_info_portion(v)
	end
end
function get_infos_from_data(npc, s) counterAdd("stalker_generic.get_infos_from_data")
	local t = {}
    if s then
		for name in string.gfind( s, "(%|*[^%|]+%|*)%p*" ) do
			local condlist = xr_logic.parse_condlist( name, npc, "in", name )
			if condlist then
				table.insert(t, xr_logic.pick_section_from_condlist(db.actor, npc, condlist))
			end
		end
	end
    return t
end


----------------------------------------------------------------------------------------------------------------------
-- STALKER IGNORE MONSTER THRESHOLD
----------------------------------------------------------------------------------------------------------------------
-- Вызывается на переключении на новую секцию. Производит вычитывание настроек из текущей секции.
function reset_threshold(npc, scheme, st, section) counterAdd("stalker_generic.reset_threshold")
	local threshold_section
	if scheme == nil or scheme == "nil" then
		threshold_section = utils.cfg_get_string(st.ini, st.section_logic, "threshold", npc, false, "")
	else
		threshold_section = utils.cfg_get_string(st.ini, section, "threshold", npc, false, "")
	end

	if threshold_section then
		local max_ignore_distance	= utils.cfg_get_number(st.ini, threshold_section, "max_ignore_distance", npc, false)
		if max_ignore_distance then
			npc:max_ignore_monster_distance(max_ignore_distance)
		else
			npc:restore_max_ignore_monster_distance()
		end
		local ignore_monster		= utils.cfg_get_number(st.ini, threshold_section, "ignore_monster", npc, false)
		if ignore_monster then
			npc:ignore_monster_threshold(ignore_monster)
		else
			npc:restore_ignore_monster_threshold()
		end
	end
end


----------------------------------------------------------------------------------------------------------------------
-- STALKER MAP SHOW
----------------------------------------------------------------------------------------------------------------------
-- Вызывается на переключении на новую секцию. Производит вычитывание настроек из текущей секции.
function reset_show_spot(npc, scheme, st, section) counterAdd("stalker_generic.reset_show_spot")
	local spot_section
	if scheme == nil or scheme == "nil" then
		spot_section = utils.cfg_get_string(st.ini, st.section_logic, "show_spot", npc, false, "")
	else
		spot_section = utils.cfg_get_string(st.ini, section, "show_spot", npc, false, "")
	end

	if spot_section == nil then
		spot_section = "true"
	end
	
    local spot = "false"
	local ignoredCommunity = {
		["zombied"] = true,
		["fotoman"] = true,
	}
    if not ignoredCommunity[npc:character_community()] then
	    local spot_condlist = xr_logic.parse_condlist( spot_section, npc, section, "show_spot" )
	    spot = xr_logic.pick_section_from_condlist(db.actor, npc, spot_condlist)
    end

	local sim  = alife()
	if not sim then
		return
	end

	local obj  = sim:object(npc:id())

	if obj then
		local alive = npc:alive()
		--amk.send_tip(npc:name().." "..tostring(alive).." "..utils2.community_relation(npc:character_community(), db.actor).." "..utils2.community_relation_name(npc:character_community(), db.actor).." "..tostring(npc:relation(db.actor) == game_object.enemy).." "..tostring(level.get_game_difficulty()))
		if
			spot == "false"
			or
			IAmAStalker[npc:clsid()]
			and
			(
				alive
				and
				npc:relation(db.actor) == game_object.enemy
				and
				(
					not game_options.minimapSpots_showEnemyLiveOnNovice
					or
					level.get_game_difficulty() > 0
				)
				
				or
				
				not alive
				and
				utils2.community_relation_name(npc:character_community(), db.actor) == "enemy"
				and
				game_options.minimapSpots_hideEnemyDeathOnMaster
				and
				level.get_game_difficulty() == 3
			)
		then
			-- прячем
			obj:visible_for_map(false)
		else
			-- ставим
			obj:visible_for_map(true)
		end
	end
end

