local t = {}
local table_insert = table.insert

-- Проверка, что гулаг на активной локации:
function gulag_level(gulag)
	local actor = db.actor
	local gg = game_graph()
	local gv = actor and actor:game_vertex_id()
	local lid = gv and gg:vertex(gv):level_id()
	--get_console():execute( string.format("load ~[инфо_лог]:[gulag_esc]: gulag:%s gulag.lvlid: %s <> lid: %s",gulag.name,gulag.lvlid,tostring(lid)))
	return gulag.lvlid == lid
end

-- Загрузка работ:
function load_job(sj,gname,type,squad,groups)

-------'''' Гулаги с постоянным состоянием ''''-------
	-- Сосычи []
	if type == "puz_bloodsucker" then
		--' 5 работы
		for t = 1, 3 do
			t = {section = "logic@puz_bloodsucker1", idle = 0, prior = 7, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 2 do
			t = {section = "logic@puz_bloodsucker2", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end

	-- Кабаны []
	if type == "puz_boar" then
		--' 8 работы
		for t = 1, 4 do
			t = {section = "logic@puz_boar1", idle = 0, prior = 7, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 4 do
			t = {section = "logic@puz_boar2", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end

	-- Химеры []
	if type == "puz_chimera" then
		--' 4 работы
		for t = 1, 2 do
			t = {section = "logic@puz_chimera1", idle = 0, prior = 7, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 2 do
			t = {section = "logic@puz_chimera2", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end

	-- Слепыши []
	if type == "puz_dog" then
		--' 10 работ
		for t = 1, 6 do
			t = {section = "logic@puz_dog1", idle = 0, prior = 7, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 4 do
			t = {section = "logic@puz_dog2", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end

	-- Свинки []
	if type == "puz_flesh" then
		--' 6 работ
		for t = 1, 6 do
			t = {section = "logic@puz_flesh", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end

	-- Гиганты []
	if type == "puz_gigant" then
		--' 2 работы
		for t = 1, 2 do
			t = {section = "logic@puz_gigant", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end

	-- Медведи []
	if type == "puz_medwed" then
		--' 2 работы
		for t = 1, 2 do
			t = {section = "logic@puz_medwed", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end

	-- Псевдодог []
	if type == "puz_pseudodog" then
		--' 8 работ
		for t = 1, 8 do
			t = {section = "logic@puz_pseudodog", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end

	-- Снорки []
	if type == "puz_snork" then
		--' 4 работы
		for t = 1, 4 do
			t = {section = "logic@puz_snork", idle = 0, prior = 5, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
	end


---'''' Гулаги с переменным состоянием ''''---
	-- Охотники []
	if type == "puz_green" then
		--' 0 состояние 8 работ - сидим в лагере
		for i = 1, 4 do
			t = {section = "logic@puz_green_walker"..i, idle = 0, prior = 7, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 3 do
			t = {section = "logic@puz_green_kamp", idle = 0, prior = 6, state = {0},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		t = {section = "logic@puz_green_sleeper", idle = 0, prior = 5, state = {0},
			in_rest = "", out_rest = ""
		}
		table.insert(sj, t)
		--' 1 состояние 8 работ - идем в рейд
	--[[	for t = 1, 3 do
			t = {section = "logic@puz_green_raid1", idle = 0, prior = 8, state = {1},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for t = 1, 3 do
			t = {section = "logic@puz_green_raid2", idle = 0, prior = 8, state = {1},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for i = 1, 2 do
			t = {section = "logic@puz_green_walker"..i, idle = 0, prior = 4, state = {1},
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end]]
	end
end

function load_states(gname,type)

	if type == "puz_bloodsucker" then
		return function (gulag)
			return 0
		end
	end

	if type == "puz_boar" then
		return function (gulag)
			return 0
		end
	end

	if type == "puz_chimera" then
		return function (gulag)
			return 0
		end
	end

	if type == "puz_dog" then
		return function (gulag)
			return 0
		end
	end

	if type == "puz_flesh" then
		return function (gulag)
			return 0
		end
	end

	if type == "puz_gigant" then
		return function (gulag)
			return 0
		end
	end

	if type == "puz_medwed" then
		return function (gulag)
			return 0
		end
	end

	if type == "puz_pseudodog" then
		return function (gulag)
			return 0
		end
	end

	if type == "puz_snork" then
		return function (gulag)
			return 0
		end
	end

----------

	if type == "puz_green" then
		return function (gulag)
			--local hour = level.get_time_hours()
			--if gulag_level(gulag) then
			--	if hour >=12 and hour <= 21 then
					--if xr_gulag.getGulagPopulationComed("puz_green") < 6 and xr_gulag.getGulagPopulationComed("puz_flesh") == 0 then
					--	return 0  -- сидим в лагере
					--end
			--		return 1  -- идем в рейд
			--	end
				return 0  -- сидим в лагере
			--end
			--return gulag.state
		end
	end
end

function load_ltx(gname,type)
	return nil
end

function checkStalker(npc_community,gulag_type,npc_rank,sobj)

	if gulag_type == "puz_green" then
		return npc_community == "green"
	end

	return false
end

function checkMonster(npc_community,gulag_type)

	if gulag_type == "puz_bloodsucker" then
		return npc_community == "bloodsucker"
	end

	if gulag_type == "puz_boar" then
		return npc_community == "boar"
	end

	if gulag_type == "puz_chimera" then
		return npc_community == "chimera"
	end

	if gulag_type == "puz_dog" then
		return npc_community == "dog"
	end

	if gulag_type == "puz_flesh" then
		return npc_community == "flesh"
	end
	
	if gulag_type == "puz_gigant" then
		return npc_community == "pseudo_gigant"
	end

	if gulag_type == "puz_medwed" then
		return npc_community == "medwed"
	end

	if gulag_type == "puz_pseudodog" then
		return npc_community == "pseudodog"
	end

	if gulag_type == "puz_snork" then
		return npc_community == "snork"
	end

	return false
end